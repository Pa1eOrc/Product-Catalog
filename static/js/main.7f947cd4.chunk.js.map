{"version":3,"sources":["comonents/Footer/Footer.tsx","helpers/utils/calculateDiscountPercentage.ts","helpers/utils/sortHelperFunctions.ts","helpers/fetch/httpClient.ts","comonents/api/products.ts","comonents/api/phones.ts","comonents/api/tablets.ts","comonents/api/accessories.ts","helpers/localStorage/useLocalStorage.ts","helpers/fetch/fetchClient.ts","comonents/api/productDetails.ts","comonents/ProductContext/ProductContext.tsx","helpers/utils/getSearchWith.tsx","comonents/Header/Header.tsx","App.tsx","comonents/Banner/Banner.tsx","comonents/Button/Button.tsx","comonents/ProductCard/ProductCard.tsx","comonents/Carousel/Carousel.tsx","comonents/ProductSlider/ProductSlider.tsx","comonents/BrandNew/BrandNew.tsx","comonents/Category/Category.tsx","comonents/HotPrices/HotPrices.tsx","comonents/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","comonents/Dropdown/Dropdown.tsx","comonents/Pagination/Pagination.tsx","helpers/utils/pageCountFunction.ts","comonents/ProductList/ProductList.tsx","comonents/NoResults/NoResults.tsx","helpers/utils/sortProducts.ts","comonents/NoSearchResults/NoSearchResults.tsx","comonents/BreadCrumbs/BreadCrumbs.tsx","pages/PhonesPage/PhonesPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/FavouritesPage/FavouritesPage.tsx","comonents/Cart/Cart.tsx","comonents/BackButton/BackButton.tsx","pages/CartPage/CartPage.tsx","helpers/utils/getFilteredCart.ts","helpers/utils/getTotalPrice.ts","comonents/About/About.tsx","comonents/Options/Option.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","Root.tsx","index.tsx"],"names":["Footer","className","to","title","target","rel","type","onClick","window","scrollTo","top","calculateDiscountPercentage","fullPrice","price","toFixed","filterProductsByCategory","products","category","filter","product","filterProductsById","id","request","url","delay","Promise","resolve","setTimeout","then","fetch","response","json","client","getProducts","getHotPriceProducts","filteredProducts","sortFunction","sortedProducts","sort","productA","productB","absoluteDiscountA","absoluteDiscountB","Number","getPhones","a","data","getTablets","getAccessories","useLocalStorage","key","startValue","useState","localStorage","getItem","JSON","parse","e","value","setValue","newValue","setItem","stringify","fetchProducts","getData","setData","setIsError","setIsLoading","name","console","error","fetchDetails","selectedProductId","setProductDetails","setSelectedProduct","setIsProductNotFound","foundProduct","find","p","itemId","details","ProductsContext","React","createContext","hotPriceProducts","newBrandProducts","links","sortDropdown","options","isOpen","perPageDropdown","page","query","perPage","setPerPage","setPageCount","setStartIndex","phones","isLoading","tablets","accessories","setCurrentOption","productDetails","capacityAvailable","colorsAvailable","color","capacity","namespaceId","images","description","text","resolution","processor","camera","zoom","cell","setSelectedProductId","selectedProduct","year","image","screen","ram","getArrayLength","carts","setCarts","randomProducts","favourites","setFavourites","isProductAdded","getArrayUpdates","isProductNotFound","isError","prevSearch","setPrevSearch","isMessage","setIsMessage","isMobile","screenWidth","prevLocation","setPrevLocation","ProductsProvider","children","setProducts","useSearchParams","searchParams","location","useLocation","setHotPriceProducts","setNewBrandProducts","setTablets","setPhones","setAccessories","outerWidth","setScreenWidth","useEffect","handleResize","addEventListener","removeEventListener","ProductClient","filteredProductsByAge","filteredProductsByPrice","pathname","setRandomProducts","count","productsRandom","availableProducts","length","push","shuffledProducts","Math","random","slice","get","productsToCheck","some","productValue","Newest","Alphabetically","Cheapest","All","perPageToNum","Array","from","ceil","_","index","currentValue","Object","keys","array","productsToUpdare","productToCheck","Provider","useProducts","useContext","getSearchWith","currrentParams","paramsToUpdate","newParams","URLSearchParams","toString","entries","forEach","delete","set","Header","isHomePage","isCartPage","isProductDetailsPage","link","getPlaceholderText","split","isMenu","setIsMenu","getLinkClass","isActive","classNames","handleMenuClick","setSearchParams","inputValue","setInputValue","setDebounceSearchWidth","useCallback","debounce","search","placeholder","onChange","updatedInput","App","Banner","activeSlide","setActiveSlide","totalSlides","handleButtonClick","action","prevSlide","autoChangeSlide","intervalId","setInterval","clearInterval","map","src","alt","Button","isProductInCart","isProductInFavourites","preventDefault","updatesProducts","ProductCard","state","replace","Carousel","currentSlide","firstItem","document","querySelector","itemWidth","clientWidth","querySelectorAll","style","transform","buttons","ProductSlider","setCurrentSlide","isPrevDisabled","useMemo","isNextDisabled","newSlide","BrandNew","currentBrandNewSlide","setCurrentBrandNewSlide","Category","renderContext","productType","HotPrices","currentHotPriceSlide","setCurrentHotPriceSlide","Loader","HomePage","Dropdown","dropdown","queryKey","isOpenState","setIsOpenState","dropdownRef","useRef","selectedOption","handleClickOutside","event","current","contains","handleClick","ref","option","Pagination","currentPage","pageCount","totalLength","isPrev","isNext","pageCountCurrent","pageCountFunction","ProductList","productsForCurrentPage","NoResults","SortProducts","localeCompare","queryValue","toLowerCase","includes","NoSearchResults","BreadCrumbs","linkName","PhonesPage","sortedPhones","startIndex","TabletsPage","sortedTablets","AccessoriesPage","sortedAccessories","NotFoundPage","FavouritesPage","sortedFavourites","Cart","cart","handleCartAction","totalPrice","BackButton","navigate","useNavigate","CartPage","filteredCarts","getFilteredCarts","reduce","acc","getTotalPrice","cartToAdd","itemIndex","updatedCarts","findIndex","cartItem","splice","About","element","join","Option","isCapacity","setIsCapacity","isColor","setIsColor","handleCapacityChange","handleColorCahange","transformedColor","ProductDetailsPage","productId","useParams","imgFormat","selectedImg","setSelectedImg","getBackButtonName","img","href","handleImageClick","Root","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7f947cd4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nimport './Footer.scss';\n\nexport const Footer = () => {\n  const handleButtonClick = () => {\n    window.scrollTo({\n      top: 0,\n    });\n  };\n\n  return (\n    <footer className=\"footer\">\n      <Link\n        to=\"/\"\n        title=\"Back to home page\"\n        className=\"icon icon--footer-logo\"\n      />\n\n      <div className=\"footer__link-container\">\n        <Link\n          className=\"text text--small text--gray footer__link\"\n          to=\"https://github.com/Pa1eOrc/product_catalog\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </Link>\n        <Link\n          to=\"/\"\n          className=\"text text--small text--gray footer__link\"\n        >\n          Contacts\n        </Link>\n        <Link\n          to=\"/\"\n          className=\"text text--small text--gray footer__link\"\n        >\n          Rights\n        </Link>\n      </div>\n\n      <div className=\"footer__button-container\">\n        <p className=\"text text--small text--gray\">Back to top</p>\n        <button\n          className=\"footer__button\"\n          type=\"button\"\n          title=\"Back to top\"\n          onClick={handleButtonClick}\n        >\n          <span className=\"icon icon--arrow\" />\n        </button>\n      </div>\n    </footer>\n  );\n};\n","export function calculateDiscountPercentage(\n  fullPrice: number, price: number,\n) {\n  if (fullPrice && price) {\n    const discount = fullPrice - price;\n    const discountPercentage = (discount / fullPrice) * 100;\n\n    return discountPercentage.toFixed(2);\n  }\n\n  return 0;\n}\n","import { Product } from '../../type/Product';\nimport { calculateDiscountPercentage }\n  from './calculateDiscountPercentage';\n\nexport function filterProductsByDiscount(products: Product[]): Product[] {\n  return products.filter(product => product.price < product.fullPrice);\n}\n\nexport function sortProductsByAbsoluteDiscount(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    const absoluteDiscountA = calculateDiscountPercentage(\n      productA.fullPrice, productA.price,\n    );\n    const absoluteDiscountB = calculateDiscountPercentage(\n      productB.fullPrice, productB.price,\n    );\n\n    return Number(absoluteDiscountB) - Number(absoluteDiscountA);\n  });\n}\n\nexport function filterProductsByAge(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    return productB.year - productA.year;\n  });\n}\n\nexport function sortProductsByPrice(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    return productB.price - productA.price;\n  });\n}\n\nexport function filterProductsByCategory(\n  products: Product[], category: string,\n): Product[] {\n  return products.filter(product => product.category === category);\n}\n\nexport function filterProductsById(\n  products: Product[], id: string,\n) {\n  return products.filter(\n    product => product.id !== id,\n  );\n}\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://pa1eorc.github.io/Product-Catalog/api/';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction request<T>(url: string): Promise<T> {\n  return wait(300)\n    .then(() => fetch(BASE_URL + url))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n};\n","import { Product } from '../../type/Product';\nimport * as sortFunction from '../../helpers/utils/sortHelperFunctions';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProducts() {\n  return client.get<Product[]>('/products.json');\n}\n\nexport const getHotPriceProducts = (products: Product[]) => {\n  const filteredProducts = sortFunction.filterProductsByDiscount(products);\n  const sortedProducts = sortFunction\n    .sortProductsByAbsoluteDiscount(filteredProducts);\n\n  return sortedProducts;\n};\n\nexport const getBrandNewProducts = (products: Product[]) => {\n  const filteredProductsByAge = sortFunction\n    .filterProductsByAge(products);\n  const filteredProductsByPrice = sortFunction\n    .sortProductsByPrice(filteredProductsByAge);\n\n  return filteredProductsByPrice;\n};\n\nexport const getSuggestedProducts = (\n  products: Product[], id: string, count: number,\n) => {\n  const productsRandom = [];\n  const availableProducts = sortFunction.filterProductsById(products, id);\n\n  if (availableProducts.length < count) {\n    productsRandom.push(...availableProducts);\n  } else {\n    const shuffledProducts = availableProducts.sort(\n      () => Math.random() - 0.5,\n    );\n\n    productsRandom.push(...shuffledProducts.slice(0, count));\n  }\n\n  return productsRandom;\n};\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByCategory,\n} from '../../helpers/utils/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getPhones() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByCategory(data, 'phones');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByCategory,\n} from '../../helpers/utils/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getTablets() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByCategory(data, 'tablets');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByCategory,\n} from '../../helpers/utils/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getAccessories() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByCategory(data, 'accessories');\n}\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string, startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (data === null) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return startValue;\n    }\n  });\n\n  const saveValue = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, saveValue];\n}\n","/* eslint-disable no-console */\nimport { getProductsDetails } from '../../comonents/api/productDetails';\nimport { Product } from '../../type/Product';\nimport { ProductDeatails } from '../../type/ProductDetails';\n\nexport const fetchProducts = async (\n  getData: () => Promise<Product[]>,\n  setData: (data: Product[]) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  name: string,\n) => {\n  setIsLoading(true);\n  setIsError('');\n  try {\n    const data = await getData();\n\n    setData(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    setIsError(`Error fetching ${name}`);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\nexport const fetchDetails = async (\n  selectedProductId: string,\n  setProductDetails: (details: ProductDeatails) => void,\n  setSelectedProduct: (product: Product) => void,\n  setIsProductNotFound: (isProductNotFound: boolean) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  products: Product[],\n  name: string,\n) => {\n  if (selectedProductId) {\n    setIsLoading(true);\n    setIsError('');\n    const foundProduct = products.find(\n      (p) => p.itemId === selectedProductId,\n    );\n\n    if (foundProduct) {\n      try {\n        const data = await getProductsDetails(foundProduct.category);\n        const details = data.find(p => p.id === selectedProductId);\n\n        if (details) {\n          setIsProductNotFound(false);\n          setProductDetails(details);\n          setSelectedProduct(foundProduct);\n        } else {\n          setIsProductNotFound(true);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsError(`Error fetching ${name}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }\n};\n","import { ProductDeatails } from '../../type/ProductDetails';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProductsDetails(category: string) {\n  return client.get<ProductDeatails[]>(`/${category}.json`);\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Product } from '../../type/Product';\nimport * as ProductClient from '../api/products';\nimport { DropdownIterface, Option } from '../../type/Dropdown';\nimport { getPhones } from '../api/phones';\nimport { getTablets } from '../api/tablets';\nimport { getAccessories } from '../api/accessories';\nimport { ProductDeatails } from '../../type/ProductDetails';\nimport { useLocalStorage } from '../../helpers/localStorage/useLocalStorage';\nimport { fetchProducts, fetchDetails } from '../../helpers/fetch/fetchClient';\nimport { filterProductsById }\n  from '../../helpers/utils/sortHelperFunctions';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ProductsContextProps = {\n  products: Product[],\n  hotPriceProducts: Product[],\n  newBrandProducts: Product[],\n  links: string[],\n  sortDropdown: DropdownIterface,\n  perPageDropdown: DropdownIterface,\n  page: number,\n  sort: string,\n  query: string,\n  perPage: string,\n  setPerPage: (length: number) => number;\n  setPageCount: (length: number, perPageToNum: number) => number[],\n  setStartIndex: (perPageToNum: number) => number,\n  phones: Product[],\n  isLoading: boolean,\n  tablets: Product[]\n  accessories: Product[],\n  setCurrentOption: (options: Option, currentValue: string) => string,\n  productDetails: ProductDeatails,\n  selectedProductId: string,\n  setSelectedProductId: (selectedProductId: string) => void,\n  selectedProduct: Product,\n  getArrayLength: (array: Product[]) => number,\n  carts: Product[],\n  setCarts: (v: Product[]) => void,\n  randomProducts: Product[],\n  favourites: Product[],\n  setFavourites: (v: Product[]) => void,\n  isProductAdded: (productsToCheck: Product[], id: string) => boolean,\n  getArrayUpdates: (\n    productsToUpdare: Product[], productToCheck: Product) => Product[],\n  isProductNotFound: boolean;\n  isError: string,\n  prevSearch: {\n    sort: string,\n    page: number,\n    perPage: string,\n  },\n  setPrevSearch: (prevSearch: {\n    sort: string,\n    page: number,\n    perPage: string,\n  }) => void,\n  isMessage: boolean,\n  setIsMessage: (isMessage: boolean) => void,\n  isMobile: boolean,\n  screenWidth: number,\n  prevLocation: string,\n  setPrevLocation: (prevLocation: string) => void,\n};\n\nexport const ProductsContext = React.createContext<ProductsContextProps>({\n  products: [],\n  hotPriceProducts: [],\n  newBrandProducts: [],\n  links: [],\n  sortDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  perPageDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  page: 0,\n  sort: '',\n  query: '',\n  perPage: '',\n  setPerPage: () => 0,\n  setPageCount: () => [],\n  setStartIndex: () => 0,\n  phones: [],\n  isLoading: true,\n  tablets: [],\n  accessories: [],\n  setCurrentOption: () => '',\n  productDetails: {\n    id: '',\n    capacityAvailable: [],\n    colorsAvailable: [],\n    color: '',\n    capacity: '',\n    namespaceId: '',\n    images: [],\n    description: [\n      {\n        title: '',\n        text: [],\n      },\n    ],\n    resolution: '',\n    processor: '',\n    camera: '',\n    zoom: '',\n    cell: [],\n  },\n  selectedProductId: '',\n  setSelectedProductId: () => '',\n  selectedProduct: {\n    fullPrice: 0,\n    price: 0,\n    year: 0,\n    id: '',\n    itemId: '',\n    capacity: '',\n    name: '',\n    image: '',\n    category: '',\n    screen: '',\n    ram: '',\n  },\n  getArrayLength: () => 0,\n  carts: [],\n  setCarts: () => [],\n  randomProducts: [],\n  favourites: [],\n  setFavourites: () => [],\n  isProductAdded: () => false,\n  getArrayUpdates: () => [],\n  isProductNotFound: false,\n  isError: '',\n  prevSearch: {\n    sort: '',\n    page: 1,\n    perPage: '',\n  },\n  setPrevSearch: () => { },\n  isMessage: false,\n  setIsMessage: () => {},\n  isMobile: false,\n  screenWidth: 1040,\n  prevLocation: '',\n  setPrevLocation: () => {},\n});\n\nexport const ProductsProvider: React.FC<Props> = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const [hotPriceProducts, setHotPriceProducts] = useState<Product[]>([]);\n  const [newBrandProducts, setNewBrandProducts] = useState<Product[]>([]);\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const [phones, setPhones] = useState<Product[]>([]);\n  const [accessories, setAccessories] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const links = ['phones', 'tablets', 'accessories', 'favourites'];\n  const [isError, setIsError] = useState('');\n  const [isMessage, setIsMessage] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(window.outerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.outerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const mobileScreen = 639;\n  const isMobile = screenWidth <= mobileScreen;\n\n  useEffect(() => {\n    fetchProducts(\n      ProductClient.getProducts,\n      setProducts,\n      setIsError,\n      setIsLoading,\n      'products',\n    );\n  }, []);\n\n  useEffect(() => {\n    setHotPriceProducts(ProductClient.getHotPriceProducts(products));\n    setNewBrandProducts(ProductClient.getBrandNewProducts(products));\n  }, [products]);\n\n  useEffect(() => {\n    if (location.pathname === '/phones') {\n      fetchProducts(getPhones, setPhones, setIsError, setIsLoading, 'phones');\n    }\n\n    if (location.pathname === '/tablets') {\n      fetchProducts(\n        getTablets, setTablets, setIsError, setIsLoading, 'tablets',\n      );\n    }\n\n    if (location.pathname === '/accessories') {\n      fetchProducts(\n        getAccessories, setAccessories, setIsError, setIsLoading, 'accessories',\n      );\n    }\n  }, [location.pathname]);\n\n  // #region Details\n  const count = 8;\n  const [selectedProductId, setSelectedProductId] = useState('');\n  const [productDetails, setProductDetails] = useState<ProductDeatails>({\n    id: '',\n    capacityAvailable: [],\n    colorsAvailable: [],\n    color: '',\n    capacity: '',\n    namespaceId: '',\n    images: [],\n    description: [\n      {\n        title: '',\n        text: [],\n      },\n    ],\n    resolution: '',\n    processor: '',\n    camera: '',\n    zoom: '',\n    cell: [],\n  });\n  const [selectedProduct, setSelectedProduct] = useState<Product>({\n    fullPrice: 0,\n    price: 0,\n    year: 0,\n    id: '',\n    itemId: '',\n    capacity: '',\n    name: '',\n    image: '',\n    category: '',\n    screen: '',\n    ram: '',\n  });\n  const [randomProducts, setRandomProducts] = useState<Product[]>([]);\n  const [isProductNotFound, setIsProductNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchDetails(\n      selectedProductId,\n      setProductDetails,\n      setSelectedProduct,\n      setIsProductNotFound,\n      setIsError,\n      setIsLoading,\n      products,\n      'product details',\n    );\n  }, [selectedProductId, products]);\n\n  useEffect(() => {\n    setRandomProducts(\n      ProductClient.getSuggestedProducts(products, selectedProductId, count),\n    );\n  }, [selectedProductId, products, count]);\n\n  // #endregion Details\n\n  //  #region Pagination, Dropdown, Carousel\n  const sortDropdown: DropdownIterface = {\n    name: 'sort',\n    options: {\n      Newest: 'age',\n      Alphabetically: 'name',\n      Cheapest: 'price',\n    },\n    isOpen: false,\n  };\n\n  const perPageDropdown: DropdownIterface = {\n    name: 'perPage',\n    options: {\n      4: '4',\n      8: '8',\n      16: '16',\n      All: 'all',\n    },\n    isOpen: false,\n  };\n  const page = +(searchParams.get('page') || 1);\n  const sort = searchParams.get('sort') || 'age';\n  const perPage = searchParams.get('perPage') || '16';\n  const query = searchParams.get('query') || '';\n  const itemsPerPage = 4;\n  const [prevSearch, setPrevSearch] = useState({\n    sort: '',\n    page: 1,\n    perPage: '',\n  });\n  const [prevLocation, setPrevLocation] = useState('');\n\n  function getArrayLength(array: Product[]) {\n    return array.length - itemsPerPage;\n  }\n\n  function setPerPage(length: number) {\n    return perPage === 'all' ? length : +perPage;\n  }\n\n  function setPageCount(length: number, perPageToNum: number) {\n    return Array.from(\n      { length: Math.ceil(length / perPageToNum) },\n      (_, index) => index + 1,\n    );\n  }\n\n  function setStartIndex(perPageToNum: number) {\n    return (page - 1) * perPageToNum;\n  }\n\n  function setCurrentOption(options: Option, currentValue: string): string {\n    const foundKey = Object.keys(options).find(\n      key => options[key] === currentValue,\n    );\n\n    return foundKey || '';\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 200);\n  }, [page, perPage, sort]);\n  //  #endregion Pagination & Dropdown\n\n  // #region Cart & Favourites\n  const [carts, setCarts] = useLocalStorage<Product[]>('cart', []);\n  const [favourites, setFavourites] = useLocalStorage<Product[]>(\n    'favourites', [],\n  );\n\n  function isProductAdded(productsToCheck: Product[], id: string) {\n    return productsToCheck.some(product => product.id === id);\n  }\n\n  function getArrayUpdates(\n    productsToUpdare: Product[], productToCheck: Product,\n  ) {\n    const productIsAdded = isProductAdded(productsToUpdare, productToCheck.id);\n    let updatedProducts = [];\n\n    if (productIsAdded) {\n      updatedProducts = filterProductsById(productsToUpdare, productToCheck.id);\n    } else {\n      updatedProducts = [...productsToUpdare, productToCheck];\n    }\n\n    return updatedProducts;\n  }\n  // #endregion Cart\n\n  const productValue: ProductsContextProps = {\n    products,\n    hotPriceProducts,\n    newBrandProducts,\n    links,\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    tablets,\n    accessories,\n    setCurrentOption,\n    productDetails,\n    selectedProductId,\n    setSelectedProductId,\n    selectedProduct,\n    getArrayLength,\n    carts,\n    setCarts,\n    randomProducts,\n    favourites,\n    setFavourites,\n    isProductAdded,\n    getArrayUpdates,\n    isProductNotFound,\n    isError,\n    prevSearch,\n    setPrevSearch,\n    isMessage,\n    setIsMessage,\n    isMobile,\n    screenWidth,\n    prevLocation,\n    setPrevLocation,\n  };\n\n  return (\n    <ProductsContext.Provider value={productValue}>\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport const useProducts = (\n): ProductsContextProps => React.useContext(ProductsContext);\n","import { SearchParams } from '../../type/SearchParams';\n\nexport function getSearchWith(\n  currrentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currrentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  if (paramsToUpdate.sort || paramsToUpdate.perPage) {\n    newParams.delete('page');\n  }\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport debounce from 'lodash.debounce';\n\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useProducts } from '../ProductContext';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { SearchParams } from '../../type/SearchParams';\n\nimport './Header.scss';\n\nexport const Header = () => {\n  const {\n    carts,\n    favourites,\n    selectedProductId,\n    query,\n    links,\n    isMobile,\n  } = useProducts();\n  const location = useLocation();\n  const isHomePage = location.pathname === '/';\n  const isCartPage = location.pathname === '/cart';\n  const isProductDetailsPage = links.some(\n    link => location.pathname === `/${link}/${selectedProductId}`,\n  );\n  const getPlaceholderText = location.pathname.split('/')[1];\n  const [isMenu, setIsMenu] = useState(false);\n\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames(\n    'navbar__link',\n    { 'navbar__link--active': isActive },\n  );\n\n  const handleMenuClick = () => {\n    if (isMobile) {\n      setIsMenu(!isMenu);\n    }\n  };\n\n  useEffect(() => {\n    if (!isMobile) {\n      setIsMenu(false);\n    }\n  }, [isMobile]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(query);\n\n  const setDebounceSearchWidth = useCallback(\n    debounce((paramsToUpdate: SearchParams) => {\n      const search = getSearchWith(searchParams, paramsToUpdate);\n\n      setSearchParams(search);\n    }, 1000), [searchParams, location.pathname],\n  );\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedInput = { query: e.target.value || null };\n\n    setInputValue(e.target.value);\n    setDebounceSearchWidth(updatedInput);\n  };\n\n  const clearInput = () => {\n    setSearchParams(getSearchWith(searchParams, { query: null }));\n    setInputValue(query);\n  };\n\n  useEffect(() => {\n    setInputValue(query);\n  }, [query]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <NavLink\n          to=\"/\"\n          title=\"Back to home page\"\n          className=\"header__logo\"\n          onClick={handleMenuClick}\n        >\n          <span className=\"icon icon--logo\" />\n        </NavLink>\n\n        <button\n          type=\"button\"\n          className=\"header__menu-button\"\n          title=\"menu\"\n          onClick={handleMenuClick}\n        >\n          <span className={classNames(\n            'icon',\n            { 'icon--menu': !isMenu },\n            { 'icon--cross': isMenu },\n          )}\n          />\n        </button>\n      </div>\n\n      <nav className={classNames(\n        'navbar',\n        { 'navbar--active': isMobile && isMenu },\n      )}\n      >\n        <div className=\"navbar__first-container\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <p className=\"navbar__item navbar__item--link\">\n              Home\n            </p>\n          </NavLink>\n\n          <NavLink\n            to=\"/phones\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <p className=\"navbar__item navbar__item--link\">\n              Phones\n            </p>\n          </NavLink>\n\n          <NavLink\n            to=\"/tablets\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <p className=\"navbar__item navbar__item--link\">\n              Tablets\n            </p>\n          </NavLink>\n\n          <NavLink\n            to=\"/accessories\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <p className=\"navbar__item navbar__item--link\">\n              Accessories\n            </p>\n          </NavLink>\n        </div>\n\n        <div className=\"navbar__second-container\">\n          {!isCartPage\n            && !isHomePage\n            && !isProductDetailsPage\n            && (\n              <label className=\"navbar__search-container\">\n                <input\n                  type=\"search\"\n                  placeholder={`Search in ${getPlaceholderText}...`}\n                  className=\"navbar__search\"\n                  value={inputValue}\n                  onChange={handleInputChange}\n                />\n\n                {!inputValue ? (\n                  <span className=\"icon icon--search\" />\n                ) : (\n                  <button\n                    onClick={clearInput}\n                    type=\"submit\"\n                    title=\"clear imput\"\n                    className=\"navbar__clear-button\"\n                    data-cy=\"searchDelete\"\n                  >\n                    <span className=\"icon icon--cross\" />\n                  </button>\n                )}\n              </label>\n            )}\n\n          <NavLink\n            to=\"/favourites\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <div className=\"navbar__item navbar__item--icon\">\n              <span className=\"icon icon--favourites\" />\n              {favourites.length > 0 && (\n                <span className=\"navbar__quantity\">\n                  {favourites.length}\n                </span>\n              )}\n            </div>\n          </NavLink>\n\n          <NavLink\n            to=\"/cart\"\n            className={getLinkClass}\n            onClick={handleMenuClick}\n          >\n            <div className=\"navbar__item navbar__item--icon\">\n              <span className=\"icon icon--cart\" />\n              {carts.length > 0 && (\n                <span className=\"navbar__quantity\">\n                  {carts.length}\n                </span>\n              )}\n            </div>\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Footer } from './comonents/Footer';\nimport { Header } from './comonents/Header';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Outlet />\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import classNames from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useProducts } from '../ProductContext';\n\nimport './Banner.scss';\n\nexport const Banner = () => {\n  const { links } = useProducts();\n  const [activeSlide, setActiveSlide] = useState(0);\n  const totalSlides = links.slice(0, 3).length;\n\n  const handleButtonClick = (action: 'next' | 'prev') => {\n    if (action === 'next') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide < totalSlides - 1 ? prevSlide + 1 : 0),\n      );\n    } else if (action === 'prev') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide === 0 ? totalSlides - 1 : prevSlide - 1),\n      );\n    }\n  };\n\n  const autoChangeSlide = () => {\n    handleButtonClick('next');\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(autoChangeSlide, 5000);\n\n    return () => clearInterval(intervalId);\n  }, [activeSlide]);\n\n  return (\n    <section className=\"home-page__banner banner\">\n      <div className=\"banner__carousel-container\">\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('prev')}\n        >\n          <span className=\"icon icon--arrow icon--prev\" />\n        </button>\n\n        <ul className=\"banner__carousel\">\n          {links.slice(0, 3).map((link, index) => (\n            <li key={link}>\n              <Link\n                to={`/${link}`}\n                className={`banner__link\n              ${index === activeSlide ? 'banner__link--active' : ''}\n              ${index === activeSlide + 1 ? 'banner__link--next' : ''}\n              ${index === activeSlide - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === 0 && index === totalSlides - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === totalSlides - 1 && index === 0 ? 'banner__link--next' : ''}\n              `}\n              >\n                <img\n                  className=\"banner__img\"\n                  src={`img/banner-${link}.png`}\n                  alt={`${link} banner`}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('next')}\n        >\n          <span className=\"icon icon--arrow icon--next\" />\n        </button>\n      </div>\n\n      <div className=\"banner__dot-container\">\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 0 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 1 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 2 },\n          )}\n        />\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport './Button.scss';\nimport { useProducts } from '../ProductContext';\nimport { Product } from '../../type/Product';\n\ntype Props = {\n  name: string,\n  product: Product,\n};\n\nexport const Button: React.FC<Props> = ({ name, product }) => {\n  const {\n    getArrayUpdates,\n    isProductAdded,\n    carts,\n    setCarts,\n    favourites,\n    setFavourites,\n  } = useProducts();\n\n  const isProductInCart = isProductAdded(carts, product.id);\n  const isProductInFavourites = isProductAdded(favourites, product.id);\n\n  const handleButtonClick = (e: React.MouseEvent, action: string) => {\n    e.preventDefault();\n    let updatesProducts = [];\n\n    if (action === 'cart') {\n      updatesProducts = getArrayUpdates(carts, product);\n      setCarts(updatesProducts);\n    }\n\n    if (action === 'favourites') {\n      updatesProducts = getArrayUpdates(favourites, product);\n      setFavourites(updatesProducts);\n    }\n  };\n\n  return (\n    <div className=\"button\">\n      <button\n        type=\"submit\"\n        className={classNames(\n          'button__add',\n          { 'button__add--selected': isProductInCart },\n          { 'button__add--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'cart')}\n      >\n        {isProductInCart ? (\n          'Added to cart'\n        ) : (\n          'Add to cart'\n        )}\n      </button>\n\n      <button\n        type=\"submit\"\n        title=\"favourites\"\n        data-cy=\"addToFavorite\"\n        className={classNames(\n          'button__fav',\n          { 'button__fav--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'favourites')}\n      >\n        <span className={classNames(\n          'icon',\n          'icon--favourites',\n          { 'icon--favourites-red': isProductInFavourites },\n        )}\n        />\n      </button>\n    </div>\n  );\n};\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { Product } from '../../type/Product';\nimport { Button } from '../Button';\n\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    name,\n    price,\n    fullPrice,\n    screen,\n    capacity,\n    ram,\n    category,\n    image,\n    itemId,\n  } = product;\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const link = location.pathname === '/favourites'\n    ? `/favourites/${itemId}`\n    : `/${category}/${itemId}`;\n  const imgFormat = () => {\n    if (category === 'phones') {\n      return image.replace(/\\.webp$/, '.jpg');\n    }\n\n    return image;\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: link,\n      }}\n      state={{ search: searchParams.toString() }}\n      data-cy=\"cardsContainer\"\n      className=\"product-card\"\n    >\n      <div className=\"product-card__img-container\">\n        <img\n          className=\"product-card__img\"\n          src={`${imgFormat()}`}\n          alt={itemId}\n        />\n      </div>\n      <div className=\"product-card__container\">\n        <p className=\"text product-card__title\">{name}</p>\n\n        <div\n          className=\"product-card__price-container\"\n        >\n          <h2 className=\"text text--price\">\n            {`$${price}`}\n          </h2>\n          <h2\n            className=\"text text--h2-strikethrough\"\n          >\n            {`$${fullPrice}`}\n          </h2>\n        </div>\n\n        <div className=\"product-card__info-container\">\n          <div className=\"product-card__info\">\n            <p className=\"text text--small text--gray\">\n              Screen\n            </p>\n            <p className=\"text text--small\">{screen}</p>\n          </div>\n\n          <div className=\"product-card__info\">\n            <p className=\"text text--small text--gray\">\n              Capacity\n            </p>\n            <p className=\"text text--small\">{capacity}</p>\n          </div>\n\n          <div className=\"product-card__info\">\n            <p className=\"text text--small text--gray\">\n              RAM\n            </p>\n            <p className=\"text text--small\">{ram}</p>\n          </div>\n        </div>\n\n        <Button\n          name=\"cart\"\n          product={product}\n        />\n      </div>\n    </Link>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './Carousel.scss';\n\ntype Props = {\n  products: Product[],\n  currentSlide: number,\n  id: string,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  products,\n  currentSlide,\n  id,\n}) => {\n  const firstItem = document.querySelector('.carousel__item');\n  const itemWidth = firstItem?.clientWidth || 0;\n\n  useEffect(() => {\n    const productsToMove = document.querySelectorAll(\n      `.carousel__item--${id}`,\n    );\n\n    productsToMove.forEach((product) => {\n      const element = product as HTMLElement;\n\n      element.style.transform = `translateX(-${currentSlide * itemWidth}px)`;\n    });\n  }, [currentSlide]);\n\n  return (\n    <ul className=\"carousel\">\n      {products.map((product) => {\n        return (\n          <li\n            key={product.id}\n            className={`\n            carousel__item\n            carousel__item--${id}`}\n          >\n            <ProductCard\n              product={product}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useMemo } from 'react';\n\nimport './ProductSlider.scss';\n\nconst buttons = ['prev', 'next'];\n\ntype Props = {\n  currentSlide: number,\n  setCurrentSlide: (currentSlide: number) => void,\n  length: number,\n};\n\nexport const ProductSlider: React.FC<Props> = ({\n  currentSlide,\n  setCurrentSlide,\n  length,\n}) => {\n  const handleButtonClick = (action: string) => {\n    let newSlide = currentSlide;\n\n    if (action === 'prev' && currentSlide > 0) {\n      newSlide = currentSlide - 1;\n    }\n\n    if (action === 'next' && currentSlide < length) {\n      newSlide = currentSlide + 1;\n    }\n\n    setCurrentSlide(newSlide);\n  };\n\n  const isPrevDisabled = useMemo(\n    () => currentSlide === 0, [currentSlide],\n  );\n  const isNextDisabled = useMemo(\n    () => currentSlide === length, [currentSlide, length],\n  );\n\n  return (\n    <div className=\"product-slider\">\n      {buttons.map(action => (\n        <button\n          key={action}\n          type=\"button\"\n          title={`move ${action === 'prev' ? 'back' : 'forward'}`}\n          className={classNames('product-slider__button', {\n            'product-slider__button--disabled': action === 'prev'\n              ? isPrevDisabled\n              : isNextDisabled,\n          })}\n          onClick={() => handleButtonClick(action)}\n        >\n          <span\n            className={`\n              icon\n              icon--arrow\n              icon--${action}\n              ${action === 'prev' && isPrevDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n              ${action === 'next' && isNextDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n            `}\n          />\n        </button>\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const BrandNew = () => {\n  const { newBrandProducts, getArrayLength } = useProducts();\n  const [currentBrandNewSlide, setCurrentBrandNewSlide] = useState(0);\n  const length = getArrayLength(newBrandProducts);\n\n  return (\n    <section className=\"home-page__brand-new\">\n      <div className=\"container\">\n        <h1 className=\"text text--h2\">\n          Brand new models\n        </h1>\n\n        <ProductSlider\n          currentSlide={currentBrandNewSlide}\n          setCurrentSlide={setCurrentBrandNewSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={newBrandProducts}\n        currentSlide={currentBrandNewSlide}\n        id=\"brand-new\"\n      />\n    </section>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useProducts } from '../ProductContext';\n\nimport './Category.scss';\nimport { filterProductsByCategory }\n  from '../../helpers/utils/sortHelperFunctions';\n\nexport const Category = () => {\n  const { links, products } = useProducts();\n\n  const renderContext = (link: string) => {\n    let title = '';\n    let productType = '';\n\n    if (link === 'tablets') {\n      title = 'Tablets';\n      productType = 'tablets';\n    }\n\n    if (link === 'accessories') {\n      title = 'Accessories';\n      productType = 'accessories';\n    }\n\n    if (link === 'phones') {\n      title = 'Mobile phones';\n      productType = 'phones';\n    }\n\n    const filteredProducts = filterProductsByCategory(products, productType);\n\n    return (\n      <>\n        <h3 className=\"text text--h3\">{title}</h3>\n        <p className=\"text text--gray\">\n          {`${filteredProducts.length} models`}\n        </p>\n      </>\n    );\n  };\n\n  return (\n    <section className=\"home-page__category category\">\n      <h1 className=\"text text--h2\">\n        Shop by category\n      </h1>\n\n      <ul className=\"category__container\">\n        {links.slice(0, 3).map(link => (\n          <li\n            key={link}\n            data-cy=\"categoryLinksContainer\"\n            className=\"category__link-container\"\n          >\n            <Link\n              to={`/${link}`}\n              className={`category__link category__link--${link}`}\n            >\n              <img\n                src={`img/category-${link}.png`}\n                alt=\"category\"\n                className=\"category__img\"\n              />\n            </Link>\n\n            <div className=\"category__title-container\">\n              {renderContext(link)}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const HotPrices = () => {\n  const { hotPriceProducts, getArrayLength } = useProducts();\n  const [currentHotPriceSlide, setCurrentHotPriceSlide] = useState(0);\n  const length = getArrayLength(hotPriceProducts);\n\n  return (\n    <section className=\"home-page__hot-price\">\n      <div className=\"container\">\n        <h1 className=\"text text--h2\">Hot prices</h1>\n\n        <ProductSlider\n          currentSlide={currentHotPriceSlide}\n          setCurrentSlide={setCurrentHotPriceSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={hotPriceProducts}\n        currentSlide={currentHotPriceSlide}\n        id=\"hot-price\"\n      />\n    </section>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect } from 'react';\nimport { Banner } from '../../comonents/Banner';\nimport { BrandNew } from '../../comonents/BrandNew';\nimport { Category } from '../../comonents/Category';\nimport { HotPrices } from '../../comonents/HotPrices';\nimport { Loader } from '../../comonents/Loader';\nimport { useProducts } from '../../comonents/ProductContext';\n\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n  const { isLoading, isError, setPrevLocation } = useProducts();\n\n  useEffect(() => {\n    setPrevLocation('home');\n  }, []);\n\n  return (\n    <main className=\"home-page\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {isError ? (\n            <h1>{isError}</h1>\n          ) : (\n            <>\n              <h1 className=\"home-page__title text text--h1\">\n                Welcome to Nice Gadgets store!\n              </h1>\n\n              <Banner />\n\n              <BrandNew />\n\n              <Category />\n\n              <HotPrices />\n            </>\n          )}\n        </>\n      )}\n    </main>\n  );\n};\n","import classNames from 'classnames';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { DropdownIterface } from '../../type/Dropdown';\nimport { useProducts } from '../ProductContext';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  dropdown: DropdownIterface,\n  currentValue: string,\n  queryKey: string,\n  name: string,\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  dropdown,\n  currentValue,\n  queryKey,\n  name: title,\n}) => {\n  const {\n    name,\n    options,\n    isOpen,\n  } = dropdown;\n  const { setCurrentOption } = useProducts();\n  const [isOpenState, setIsOpenState] = useState(isOpen);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [searchParams] = useSearchParams();\n  const selectedOption = setCurrentOption(options, currentValue);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current\n        && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpenState(false);\n      }\n    };\n\n    if (isOpenState) {\n      document.addEventListener('click', handleClickOutside);\n    } else {\n      document.removeEventListener('click', handleClickOutside);\n    }\n  }, [isOpenState]);\n\n  const handleDropdownToggle = () => {\n    setIsOpenState(!isOpenState);\n  };\n\n  const handleClick = () => {\n    setIsOpenState(false);\n  };\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={classNames(\n        'dropdown',\n        { 'dropdown--active': isOpenState },\n      )}\n    >\n      <p className=\"text text--small text--gray\">\n        {title}\n      </p>\n\n      <button\n        type=\"button\"\n        className={`\n          dropdown__trigger\n          dropdown__trigger--${name}`}\n        onClick={handleDropdownToggle}\n      >\n        {selectedOption}\n\n        <span className={classNames(\n          'icon',\n          'icon--arrow-dis',\n          { 'icon--down': !isOpenState },\n        )}\n        />\n      </button>\n\n      <div className=\"dropdown__content\">\n        <ul className=\"dropdown__list\">\n          {Object.entries(options).map(option => {\n            const [key, value] = option;\n\n            return (\n              <li key={value} className=\"dropdown__item\">\n                <Link\n                  to={{\n                    search: getSearchWith(searchParams, { [queryKey]: value }),\n                  }}\n                  className={classNames(\n                    'dropdown__link',\n                    { 'dropdown__link--selected': value === currentValue },\n                  )}\n                  onClick={handleClick}\n                >\n                  {key}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport './Pagination.scss';\nimport { pageCountFunction } from '../../helpers/utils/pageCountFunction';\n\ntype Props = {\n  currentPage: number,\n  pageCount: number[],\n  totalLength: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  pageCount,\n  totalLength,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const [\n    isPrevDisabled,\n    isNextDisabled,\n    isPrev,\n    isNext,\n  ] = useMemo(() => {\n    const isPrevDisabledValue = currentPage === 1;\n    const isNextDisabledValue = currentPage === pageCount.length;\n    const isNextValue = currentPage < totalLength\n      ? currentPage + 1 : currentPage;\n    const isPrevValue = currentPage > 1 ? currentPage - 1 : currentPage;\n\n    return [isPrevDisabledValue, isNextDisabledValue, isPrevValue, isNextValue];\n  }, [currentPage, pageCount.length, totalLength]);\n  const pageCountCurrent = pageCount.length < 4\n    ? pageCount : pageCountFunction(pageCount, currentPage);\n\n  return (\n    <ul className=\"pagination\" data-cy=\"pagination\">\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isPrevDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(\n              searchParams, { page: isPrev.toString() },\n            ),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationLeft\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--prev',\n            {\n              'icon--arrow': !isPrevDisabled,\n              'icon--arrow-dis': isPrevDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n\n      <li>\n        <ul className=\"pagination__inner-list\">\n          {pageCountCurrent.map(page => (\n            <li\n              className=\"pagination__inner-item\"\n              key={page}\n            >\n              <Link\n                to={{\n                  search: getSearchWith(\n                    searchParams, { page: page.toString() },\n                  ),\n                }}\n                className={classNames(\n                  'pagination__link',\n                  { 'pagination__link--active': page === currentPage },\n                )}\n              >\n                {page}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </li>\n\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isNextDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(searchParams, { page: isNext.toString() }),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationRight\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--next',\n            {\n              'icon--arrow': !isNextDisabled,\n              'icon--arrow-dis': isNextDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","export function pageCountFunction(pageCount: number[], currentPage: number) {\n  if (currentPage >= 4 && currentPage !== pageCount.length) {\n    return pageCount.slice(currentPage - 3, currentPage + 1);\n  }\n\n  if (currentPage === pageCount.length) {\n    return pageCount.slice(currentPage - 4, currentPage);\n  }\n\n  return pageCount.slice(0, 4);\n}\n","import { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './ProductList.scss';\n\ntype Props = {\n  productsForCurrentPage: Product[],\n};\n\nexport const ProductList: React.FC<Props> = ({ productsForCurrentPage }) => {\n  return (\n    <ul className=\"product-list\" data-cy=\"productList\">\n      {productsForCurrentPage.map(product => (\n        <li\n          key={product.id}\n          className=\"product-list__item\"\n        >\n          <ProductCard product={product} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","type Props = {\n  category: string,\n};\n\nexport const NoResults: React.FC<Props> = ({ category }) => (\n  <h3>{`${category} not found`}</h3>\n);\n","import { Product } from '../../type/Product';\n// import { calculateDiscountPercentage } from './calculateDiscountPercentage';\n\nexport function SortProducts(products: Product[], sort: string, query: string) {\n  let sortedProducts: Product[] = [];\n\n  switch (sort) {\n    case 'age':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.year - productB.year,\n      );\n      break;\n\n    case 'name':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.name.localeCompare(productB.name),\n      );\n      break;\n\n    case 'price':\n      sortedProducts = [...products].sort(\n        (productA, productB) => {\n          // const absoluteDiscountA = calculateDiscountPercentage(\n          //   productA.fullPrice, productA.price,\n          // );\n          // const absoluteDiscountB = calculateDiscountPercentage(\n          //   productB.fullPrice, productB.price,\n          // );\n\n          // return +absoluteDiscountA - +absoluteDiscountB;\n\n          return productA.price - productB.price;\n        },\n      );\n      break;\n\n    default:\n      sortedProducts = products;\n  }\n\n  if (query) {\n    const queryArray = query.split(' ');\n\n    queryArray.forEach(queryValue => {\n      sortedProducts = sortedProducts.filter(\n        product => product.name.toLowerCase(\n        ).includes(queryValue.toLowerCase()),\n      );\n    });\n  }\n\n  return sortedProducts;\n}\n","type Props = {\n  category: string,\n};\n\nexport const NoSearchResults: React.FC<Props> = ({ category }) => {\n  return (\n    <h3>\n      {`There are no ${category} products matching the query`}\n    </h3>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport './BreadCrumbs.scss';\n\ntype Props = {\n  linkName: string,\n};\n\nexport const BreadCrumbs: React.FC<Props> = ({ linkName }) => {\n  return (\n    <div className=\"bread-crumbs\">\n      <Link to=\"/\">\n        <span className=\"icon icon--home\" />\n      </Link>\n\n      <span className=\"icon icon--arrow-dis icon--next\" />\n\n      <p\n        className=\"text text--small text--gray bread-crumbs__text\"\n      >\n        {linkName}\n      </p>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport '../../style/block/page.scss';\n\nexport const PhonesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    isError,\n    prevSearch,\n    setPrevSearch,\n    prevLocation,\n    setPrevLocation,\n  } = useProducts();\n  const sortedPhones = SortProducts(phones, sort, query);\n  const totalLength = sortedPhones.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedPhones.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const renderContext = () => {\n    if (!isLoading && phones.length === 0) {\n      return <NoResults category=\"Phones\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedPhones.length === 0) {\n      return <NoSearchResults category=\"phones\" />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n  }, [page, searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n\n    if (!query && sort === prevSearch.sort && perPage === prevSearch.perPage) {\n      setSearchParams(getSearchWith(\n        searchParams, { page: prevSearch.page.toString() },\n      ));\n    }\n  }, [query, sort, perPage]);\n\n  useEffect(() => {\n    if (!query) {\n      setPrevSearch({ page, sort, perPage });\n    }\n  }, [query, sort, perPage, page]);\n\n  useEffect(() => {\n    if (prevLocation.includes('phones') || !prevLocation) {\n      setPrevLocation('phones');\n    } else {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n      setPrevLocation('phones');\n    }\n  }, [prevLocation]);\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Phones\" />\n\n      <h1 className=\"text text--h1 page__title\">Mobile phones</h1>\n\n      <p className=\"text text--gray\">{`${phones.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport '../../style/block/page.scss';\n\nexport const TabletsPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    tablets,\n    isError,\n    prevSearch,\n    setPrevSearch,\n    prevLocation,\n    setPrevLocation,\n  } = useProducts();\n  const sortedTablets = SortProducts(tablets, sort, query);\n  const totalLength = sortedTablets.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedTablets.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const renderContext = () => {\n    if (!isLoading && tablets.length === 0) {\n      return <NoResults category=\"Tablets\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedTablets.length === 0) {\n      return <NoSearchResults category=\"tablets\" />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n  }, [page, searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n\n    if (!query && sort === prevSearch.sort && perPage === prevSearch.perPage) {\n      setSearchParams(getSearchWith(\n        searchParams, { page: prevSearch.page.toString() },\n      ));\n    }\n  }, [query, sort, perPage]);\n\n  useEffect(() => {\n    if (!query) {\n      setPrevSearch({ page, sort, perPage });\n    }\n  }, [query, sort, perPage, page]);\n\n  useEffect(() => {\n    if (prevLocation.includes('tablets') || !prevLocation) {\n      setPrevLocation('tablets');\n    } else {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n      setPrevLocation('tablets');\n    }\n  }, [prevLocation]);\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Tablets\" />\n\n      <h1 className=\"text text--h1 page__title\">Tablets</h1>\n\n      <p className=\"text text--gray\">{`${tablets.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport '../../style/block/page.scss';\n\nexport const AccessoriesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    accessories,\n    isError,\n    prevSearch,\n    setPrevSearch,\n    prevLocation,\n    setPrevLocation,\n  } = useProducts();\n  const sortedAccessories = SortProducts(accessories, sort, query);\n  const totalLength = sortedAccessories.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedAccessories.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const renderContext = () => {\n    if (!isLoading && accessories.length === 0) {\n      return <NoResults category=\"Accessories\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedAccessories.length === 0) {\n      return <NoSearchResults category=\"accessories\" />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n  }, [page, searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n\n    if (!query && sort === prevSearch.sort && perPage === prevSearch.perPage) {\n      setSearchParams(getSearchWith(\n        searchParams, { page: prevSearch.page.toString() },\n      ));\n    }\n  }, [query, sort, perPage]);\n\n  useEffect(() => {\n    if (!query) {\n      setPrevSearch({ page, sort, perPage });\n    }\n  }, [query, sort, perPage, page]);\n\n  useEffect(() => {\n    if (prevLocation.includes('accessories') || !prevLocation) {\n      setPrevLocation('accessories');\n    } else {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n      setPrevLocation('accessories');\n    }\n  }, [prevLocation]);\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Accessories\" />\n\n      <h1 className=\"text text--h1 page__title\">Accessories</h1>\n\n      <p className=\"text text--gray\">{`${accessories.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { useProducts } from '../../comonents/ProductContext';\nimport { ProductList } from '../../comonents/ProductList';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const FavouritesPage = () => {\n  const { favourites, query } = useProducts();\n  const sortedFavourites = SortProducts(favourites, '', query);\n  const { length } = favourites;\n\n  const renderContext = () => {\n    if (length === 0) {\n      return 'You dont have any favourites';\n    }\n\n    if (query && sortedFavourites.length === 0) {\n      return <NoSearchResults category=\"favourites\" />;\n    }\n\n    return <ProductList productsForCurrentPage={sortedFavourites} />;\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Favourites\" />\n\n      <h1 className=\"text text--h1 page__title\">\n        Favourites\n      </h1>\n\n      {length > 0 && (\n        <p className=\"text text--gray\">\n          {length === 1 ? (\n            '1 item'\n          ) : (\n            `${length} items`\n          )}\n        </p>\n      )}\n\n      <div className=\"page__main-container page__main-container--fav\">\n        {renderContext()}\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport { Carts } from '../../type/Carts';\n\nimport './Cart.scss';\n\ntype Props = {\n  cart: Carts,\n  handleCartAction: (\n    id: string, action: 'add' | 'delete' | 'deleteAll') => void,\n};\n\nexport const Cart: React.FC<Props> = ({\n  cart,\n  handleCartAction,\n}) => {\n  const {\n    id,\n    name,\n    price,\n    count,\n    image,\n    itemId,\n    category,\n  } = cart;\n\n  const totalPrice = price * count;\n  const imgFormat = () => {\n    if (category === 'phones') {\n      return image.replace(/\\.webp$/, '.jpg');\n    }\n\n    return image;\n  };\n\n  return (\n    <section className=\"cart\" key={id}>\n      <div className=\"cart__container\">\n        <div className=\"cart__cross-container\">\n          <button\n            type=\"button\"\n            title=\"delite item\"\n            className=\"cart__button cart__button--cross\"\n            data-cy=\"cartDeleteButton\"\n            onClick={() => handleCartAction(id, 'deleteAll')}\n          >\n            <span className=\"icon icon--cross\" />\n          </button>\n        </div>\n        <div className=\"cart__img-container\">\n          <img\n            src={`${imgFormat()}`}\n            alt={itemId}\n            className=\"cart__img\"\n          />\n        </div>\n        <div className=\"cart__name-container\">\n          <p className=\"text\">{name}</p>\n        </div>\n      </div>\n\n      <div className=\"cart__container\">\n        <div className=\"cart__button-container\">\n          <button\n            type=\"button\"\n            title=\"minus\"\n            className={classNames(\n              'cart__button',\n              { 'cart__button--minus': count === 1 },\n            )}\n            onClick={() => handleCartAction(id, 'delete')}\n          >\n            <span className={classNames(\n              'icon',\n              { 'icon--minus': count > 1 },\n              { 'icon--minus-gray': count === 1 },\n            )}\n            />\n          </button>\n          <div className=\"cart__count\">\n            <p className=\"text\">{count}</p>\n          </div>\n          <button\n            type=\"button\"\n            title=\"plus\"\n            className=\"cart__button cart__button--plus\"\n            onClick={() => handleCartAction(id, 'add')}\n          >\n            <span className=\"icon icon--plus\" />\n          </button>\n        </div>\n        <p className=\"text text--h2 cart__price\">{`$${totalPrice}`}</p>\n      </div>\n    </section>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\n\nimport './BackButton.scss';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  function goBack() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"back\">\n      <span className=\"icon icon--arrow icon--prev\" />\n\n      <button\n        type=\"submit\"\n        onClick={goBack}\n        className=\"text text--small text--gray back__button\"\n        data-cy=\"backButton\"\n      >\n        Back\n      </button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Cart } from '../../comonents/Cart';\nimport { getFilteredCarts } from '../../helpers/utils/getFilteredCart';\nimport { Product } from '../../type/Product';\nimport { getTotalPrice } from '../../helpers/utils/getTotalPrice';\nimport { BackButton } from '../../comonents/BackButton';\n\nimport './CartPage.scss';\n\nexport const CartPage = () => {\n  const { setCarts, isMessage, setIsMessage } = useProducts();\n  const { carts } = useProducts();\n  const filteredCarts = getFilteredCarts(carts);\n  const totalPrice = getTotalPrice(carts);\n  // const [isMessage, setIsMessage] = useState(false);\n\n  const handleCartAction = (\n    id: string, action: 'add' | 'delete' | 'deleteAll',\n  ) => {\n    let updatedCarts: Product[] = [...carts];\n    let cartToAdd: Product | undefined;\n    let itemIndex: number | undefined;\n\n    switch (action) {\n      case 'add':\n        cartToAdd = carts.find(cart => cart.id === id);\n        if (cartToAdd) {\n          updatedCarts.push(cartToAdd);\n        }\n\n        break;\n\n      case 'delete':\n        itemIndex = updatedCarts.findIndex(cartItem => cartItem.id === id);\n        if (itemIndex !== -1) {\n          updatedCarts.splice(itemIndex, 1);\n        }\n\n        break;\n\n      case 'deleteAll':\n        updatedCarts = updatedCarts.filter(cart => cart.id !== id);\n        break;\n\n      default:\n        break;\n    }\n\n    setCarts(updatedCarts);\n  };\n\n  const handleButtonClick = () => {\n    setIsMessage(true);\n\n    setTimeout(() => {\n      setIsMessage(false);\n    }, 1000);\n  };\n\n  return (\n    <section className=\"carts\">\n      <BackButton />\n\n      <h1 className=\"carts__title\">\n        {carts.length === 0 ? (\n          'Your cart is empty'\n        ) : (\n          'Cart'\n        )}\n      </h1>\n\n      {carts.length > 0 && (\n        <div className=\"carts__main-container\">\n          <div className=\"carts__container\">\n            {filteredCarts.map(cart => (\n              <Cart\n                cart={cart}\n                handleCartAction={handleCartAction}\n                key={cart.id}\n              />\n            ))}\n          </div>\n\n          <div data-cy=\"productQauntity\" className=\"carts__qauntity\">\n            <div className=\"carts__total-price-container\">\n              <h2 className=\"text text--h1\">\n                {`$${totalPrice}`}\n              </h2>\n              <p className=\"text text--gray\">\n                {carts.length > 1 ? (\n                  `Total for ${carts.length} items`\n                ) : (\n                  'Price for 1 item'\n                )}\n              </p>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"carts__button\"\n              onClick={handleButtonClick}\n            >\n              Checkout\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isMessage && (\n        <div className={classNames(\n          'carts__notification',\n          { 'carts__notification--active': isMessage },\n        )}\n        >\n          We are sorry, but this feature is not implemented yet\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Carts } from '../../type/Carts';\nimport { Product } from '../../type/Product';\n\nexport function getFilteredCarts(carts: Product[]): Carts[] {\n  const filteredCarts: { [id: string]: Carts } = {};\n\n  carts.forEach((cart) => {\n    const {\n      id,\n      price,\n      name,\n      image,\n      itemId,\n      category,\n    } = cart;\n\n    if (filteredCarts[id]) {\n      filteredCarts[id].count += 1;\n    } else {\n      filteredCarts[id] = {\n        id,\n        count: 1,\n        price,\n        name,\n        image,\n        itemId,\n        category,\n      };\n    }\n  });\n\n  const sortedCarts = Object.keys(filteredCarts)\n    .sort()\n    .map(id => filteredCarts[id]);\n\n  return sortedCarts;\n}\n","import { Product } from '../../type/Product';\n\nexport function getTotalPrice(carts: Product[]) {\n  const priceMap = carts.map(\n    cart => cart.price,\n  );\n\n  const totalPrice = priceMap.reduce((acc, value) => {\n    return acc + value;\n  }, 0);\n\n  return totalPrice;\n}\n","import './About.scss';\n\ntype Props = {\n  description: {\n    title: string;\n    text: string[];\n  }[];\n  screen: string,\n  resolution: string,\n  processor: string,\n  ram: string,\n  capacity: string,\n  camera: string,\n  zoom: string,\n  cell: string[],\n};\n\nexport const About: React.FC<Props> = ({\n  description,\n  screen,\n  resolution,\n  processor,\n  ram,\n  capacity,\n  camera,\n  zoom,\n  cell,\n}) => {\n  return (\n    <div className=\"about\">\n      <div className=\"about__description\">\n        <h2 className=\"about__title\">\n          About\n        </h2>\n\n        {description.map(element => {\n          const { title, text } = element;\n\n          return (\n            <div key={element.title} className=\"about__description-container\">\n              <p className=\"about__description-title\">{title}</p>\n              <p className=\"about__text text\">{text}</p>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"about__tech\">\n        <h2 className=\"about__title\">\n          Tech space\n        </h2>\n        <ul className=\"about__tech about__tech--container\">\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Screen</p>\n            <p className=\"text\">{screen}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Resolution\n            </p>\n            <p className=\"text\">{resolution}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Processor</p>\n            <p className=\"text\">{processor}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">RAM</p>\n            <p className=\"text\">{ram}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Built in memory\n            </p>\n            <p className=\"text\">\n              {capacity}\n            </p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Camera</p>\n            <p className=\"text\">{camera}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Zoom</p>\n            <p className=\"text\">{zoom}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Cell</p>\n            <p className=\"text\">{cell.slice(0, 4).join(', ')}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport './Option.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  capacityAvailable: string[],\n  colorsAvailable: string[],\n  isCapacity: string,\n  setIsCapacity: (isCapacity: string) => void,\n  isColor: string,\n  setIsColor: (isColor: string) => void,\n};\n\nexport const Option: React.FC<Props> = ({\n  capacityAvailable,\n  colorsAvailable,\n  isCapacity,\n  setIsCapacity,\n  isColor,\n  setIsColor,\n}) => {\n  const handleCapacityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsCapacity(e.target.value);\n  };\n\n  const handleColorCahange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsColor(e.target.value);\n  };\n\n  return (\n    <div className=\"options\">\n      <div className=\"options__container\">\n        <p className=\"text text--small text--gray\">\n          Available colors\n        </p>\n        <div className=\"options__select-container\">\n          {colorsAvailable.map(color => {\n            const transformedColor = color.replace(/\\s/g, '');\n\n            return (\n              <label\n                key={color}\n                className={classNames(\n                  'options__color-label',\n                  { 'options__color-label--selected': isColor === color },\n                )}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"color\"\n                  value={color}\n                  title={color}\n                  className=\"options__input\"\n                  onChange={handleColorCahange}\n                />\n                <span\n                  className={classNames(\n                    'options__color',\n                    `options__color--${transformedColor}`,\n                  )}\n                />\n              </label>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"options__container options__container--capacity\">\n        <p className=\"text text--small text--gray\">\n          Select capacity\n        </p>\n        <div className=\"options__select-container\">\n          {capacityAvailable.map(capacity => (\n            <label\n              key={capacity}\n              className={classNames(\n                'options__capacity',\n                'text',\n                { 'options__capacity--selected': isCapacity === capacity },\n              )}\n            >\n              <input\n                className=\"options__input\"\n                type=\"radio\"\n                name=\"capacity\"\n                value={capacity}\n                onChange={handleCapacityChange}\n              />\n              {`${capacity}`}\n            </label>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Loader } from '../../comonents/Loader';\nimport { ProductSlider } from '../../comonents/ProductSlider';\nimport { Carousel } from '../../comonents/Carousel';\nimport { About } from '../../comonents/About';\nimport { Button } from '../../comonents/Button';\nimport { Option } from '../../comonents/Options';\nimport { BackButton } from '../../comonents/BackButton';\n\nimport './ProductDetailsPage.scss';\n\nexport const ProductDetailsPage = () => {\n  const {\n    productDetails,\n    selectedProduct,\n    setSelectedProductId,\n    isLoading,\n    randomProducts,\n    getArrayLength,\n    isProductNotFound,\n    isMobile,\n  } = useProducts();\n  const { productId } = useParams();\n  const { state } = useLocation();\n  const location = useLocation();\n\n  const {\n    capacityAvailable,\n    colorsAvailable,\n    images,\n    description,\n    resolution,\n    processor,\n    camera,\n    zoom,\n    cell,\n    color,\n    capacity,\n  } = productDetails;\n\n  const {\n    price,\n    fullPrice,\n    screen,\n    image,\n    ram,\n    name,\n    category,\n  } = selectedProduct;\n\n  const imgFormat = () => {\n    if (category === 'phones') {\n      return image.replace(/\\.webp$/, '.jpg');\n    }\n\n    return image;\n  };\n\n  const imagesFormat = () => {\n    if (category === 'phones') {\n      return images.map(img => img.replace(/\\.webp$/, '.jpg'));\n    }\n\n    return images;\n  };\n\n  const [selectedImg, setSelectedImg] = useState(imgFormat);\n  const getBackButtonName = location.pathname.split('/')[1];\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const length = getArrayLength(randomProducts);\n  const [isCapacity, setIsCapacity] = useState(capacity);\n  const [isColor, setIsColor] = useState(color);\n\n  useEffect(() => {\n    setSelectedImg(imgFormat);\n    setIsCapacity(capacity);\n    setIsColor(color);\n  }, [image, capacity, color]);\n\n  useEffect(() => {\n    if (productId) {\n      setSelectedProductId(productId);\n    }\n\n    return () => {\n      setSelectedProductId('');\n    };\n  }, [productId, setSelectedProductId]);\n\n  const handleImageClick = (e: React.MouseEvent, img: string) => {\n    e.preventDefault();\n    setSelectedImg(img);\n  };\n\n  const renderContext = () => {\n    if (isProductNotFound) {\n      return (\n        <div>\n          <BackButton />\n          <h2>\n            Phone was not found\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div\n          className=\"details__bread-crumbs\"\n          data-cy=\"breadCrumbs\"\n        >\n          <Link to=\"/\">\n            <span className=\"icon icon--home\" />\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <Link\n            to={{\n              pathname: '..',\n              search: state?.search,\n            }}\n            className=\"text text--small\"\n          >\n            {getBackButtonName}\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <p className=\"text text--small text--gray\">\n            {name.toLowerCase()}\n          </p>\n        </div>\n\n        <BackButton />\n\n        <h1 className=\"details__title text text--h2\">\n          {name.toLowerCase()}\n        </h1>\n\n        <section className=\"details__main-container\">\n          {isMobile && (\n            <div className=\"details__selected-img-container\">\n              <img\n                src={`${selectedImg}`}\n                alt=\"img\"\n                className=\"details__img details__img--selected\"\n              />\n            </div>\n          )}\n          <ul className=\"details__images-container\">\n            {imagesFormat().map(img => (\n              <li\n                key={img}\n                className={classNames(\n                  'details__image-container',\n                  {\n                    'details__image-container--selected':\n                      selectedImg === img,\n                  },\n                )}\n              >\n                <a\n                  href=\"/\"\n                  type=\"button\"\n                  onClick={(e) => handleImageClick(e, img)}\n                >\n                  <img\n                    className=\"details__img\"\n                    src={`${img}`}\n                    alt=\"img\"\n                  />\n                </a>\n              </li>\n            ))}\n          </ul>\n\n          {!isMobile && (\n            <div className=\"details__selected-img-container\">\n              <img\n                src={`${selectedImg}`}\n                alt=\"img\"\n                className=\"details__img details__img--selected\"\n              />\n            </div>\n          )}\n\n          <div className=\"details__inner-container\">\n            <Option\n              capacityAvailable={capacityAvailable}\n              colorsAvailable={colorsAvailable}\n              isCapacity={isCapacity}\n              setIsCapacity={setIsCapacity}\n              isColor={isColor}\n              setIsColor={setIsColor}\n            />\n\n            <div className=\"details__info-container\">\n              <div className=\"details__price-container\">\n                <p className=\"text text--h2\">{`$${fullPrice}`}</p>\n\n                <p className={classNames(\n                  'text',\n                  'text--h2',\n                  'text--h2-strikethrough',\n                  'text--gray',\n                )}\n                >\n                  {`$${price}`}\n                </p>\n              </div>\n\n              <Button\n                name=\"details\"\n                product={selectedProduct}\n              />\n\n              <ul className=\"details__info-container\">\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Screen\n                  </p>\n                  <p className=\"text text--small\">\n                    {screen}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Resolution\n                  </p>\n                  <p className=\"text text--small\">\n                    {resolution}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Processor\n                  </p>\n                  <p className=\"text text--small\">\n                    {processor}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    RAM\n                  </p>\n                  <p className=\"text text--small\">\n                    {ram}\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </section>\n\n        <About\n          description={description}\n          screen={screen}\n          resolution={resolution}\n          processor={processor}\n          ram={ram}\n          capacity={capacity}\n          camera={camera}\n          zoom={zoom}\n          cell={cell}\n        />\n\n        <div className=\"details__carousel-container\">\n          <div className=\"details__carousel-top\">\n            <h2 className=\"text text--h2\">You may also like</h2>\n            <ProductSlider\n              currentSlide={currentSlide}\n              setCurrentSlide={setCurrentSlide}\n              length={length}\n            />\n          </div>\n\n          <Carousel\n            products={randomProducts}\n            currentSlide={currentSlide}\n            id=\"random\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <section className=\"details\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        renderContext()\n      )}\n    </section>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { FavouritesPage } from './pages/FavouritesPage';\nimport { CartPage } from './pages/CartPage';\nimport { ProductsProvider } from './comonents/ProductContext';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <ProductsProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"phones\">\n              <Route index element={<PhonesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"tablets\">\n              <Route index element={<TabletsPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"accessories\">\n              <Route index element={<AccessoriesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"favourites\">\n              <Route index element={<FavouritesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"cart\">\n              <Route index element={<CartPage />} />\n            </Route>\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Route>\n        </Routes>\n      </ProductsProvider>\n    </Router>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}